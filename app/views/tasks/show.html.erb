<style>
.card {
    margin-right: 5px;
    margin-left: 5px;
    margin-bottom: 10px;
  }

  .comment-cards {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
    gap: 20px;
  }

  .comment-card {
    background-color: #f6efef;
    padding: 20px;
    border-radius: 8px;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    position: relative;
  }

  .comment-title {
    font-size: 18px;
    font-weight: bold;
    margin-bottom: 10px;
  }

  .no-decorator {
    text-decoration: none;
  }

  .no-decorator:hover {
    text-decoration: none;
    cursor: pointer;
  }

  .btn-reopen {
    position: absolute;
    top: 0;
    right: 0;
    margin-top: 10px;
    margin-right: 10px; 
  }

  .no-comment {
    background-color: transparent;
  }

  .comment-details {
    margin-bottom: 5px;
  }

  .icon {
    margin-bottom: 6px;
  }

    .comment-header {
      display: flex;
      align-items: center;
      margin-left: 15px;
      position: relative; 
  }

  .comment-header .add-comment {
      position: absolute;
      top: 0;
      right: 0;
      margin-right: 10px;
  }

  .comment-card .comments-icons {
    display: flex; 
    position: absolute; 
    right: 0; 
    top: 0;
    margin-top: 10px;
    margin-right: 10px;
  }

  .comment-card .comments-icons > * {
    margin-right: 10px;
}

.comments-icons i.edit-button:hover {
  color: blue;
}

.comments-icons i.delete-button:hover {
  color: red;
}

</style>

<div class="container" style="margin-top: 60px;">
<h2><%= @task.name %></h2>
  <div class="card">
    <div class="card-body">
      <p><strong>Nombre:</strong> <%= @task.name %></p>
      <p><strong>Creado/a por: </strong><%= User.find(@task.user_id).name %></p>
      <p><strong>Descripción:</strong> <%= @task.description %></p>
      <p><strong>Estado:</strong> <%= @task.status %></p>
      <p><strong>Fecha de finalización:</strong> <%= @task.end_date %></p>
      <p><strong>Progreso:</strong> <%= @task.progress %>%</p>
      <p><strong>Grupo:</strong> <%= @group.name %></p>
    </div>
  </div>
</div>

<br>

<div style= "margin-left: 15px ; ">
  <%= link_to "Editar esta tarea", edit_task_path(@task), class: "btn btn-primary"%> |
  <%= link_to "Volver a las tareas", tasks_path, class: "btn btn-secundary" %>
</div>

<hr>

<div>

  <div class="comment-header">
    <i class="bi bi-chat-left-dots" style="margin-bottom: 6px; margin-right: 6px"></i>
    <h2>Comentarios</h2>
    <% if current_user.groups.include?(@task.group) %>
      <a href="<%= new_task_comment_path(@task) %>" class="btn btn-primary add-comment" style="position: absolute; right: 0; top: 0; margin-right: 10px;">Dejar un comentario <i class="bi bi-plus"></i></a>  
    <% end %>            
  </div>



  <div class="comment-cards">
    <% if @comments.any? %>
      <% @comments.each do |comment| %>
        <div class="comment-card">
          <div class="comments-icons">
            <i class="bi bi-pencil-square edit-button" id="edit-button" data-comment-id="<%= comment.id %>" data-task-id="<%= @task.id %>"></i>
            <i class="bi bi-trash delete-button" data-comment-id="<%= comment.id %>" data-task-id="<%= @task.id %>"></i>
          </div>
          <div style="display: flex;">
            <h4 class="comment-title"><%= comment.user.name %> <%= comment.user.last_name %></h4>
          </div>
          <p class="ticket-details text-muted"> <%= comment.created_at %></p>
          <p class="ticket-details" id="comment-content"> <%= comment.content %></p>
        </div>
      <% end %>
    <% else %>
      <div class="comment-card no-comment">
        <div style="display: flex;">
          <h4 class="comment-title">No hay comentarios en esta tarea</h4>
        </div>
        <i class='fas fa-comment-slash' style='font-size:24px'></i>
      </div>
    <% end %>
  </div>

</div>


<script>

  document.addEventListener("DOMContentLoaded", function () {
        const editButtons = document.querySelectorAll(".edit-button");

        editButtons.forEach(function (button) {
            button.addEventListener("click", function () {
                const commentId = button.getAttribute("data-comment-id");
                const taskId = button.getAttribute("data-task-id");

                const commentContent = document.getElementById("comment-content");

                const currentContent = commentContent.textContent;
                const editForm = document.createElement("form");

                editForm.style.display = "flex";
                editForm.style.flexDirection = "column";

                const textarea = document.createElement("textarea");
                const saveButton = document.createElement("button");
                const cancelButton = document.createElement("button");

                saveButton.style.marginTop = "10px";
                cancelButton.style.marginTop = "10px";

                saveButton.classList.add("btn");
                saveButton.classList.add("btn-info");
                cancelButton.classList.add("btn");
                cancelButton.classList.add("btn-danger");

                textarea.value = currentContent;
                saveButton.textContent = "Guardar";
                cancelButton.textContent = "Cancelar";

                saveButton.addEventListener("click", function () {
                    const newContent = textarea.value;

                    fetch(`${taskId}/comments/${commentId}`, {
                      method: "PUT",
                      headers: {
                          "Content-Type": "application/json",
                          "X-CSRF-Token": "<%= form_authenticity_token %>"
                      },
                      body: JSON.stringify({ comment: { content: newContent } })
                  })
                  .then(response => {
                      if (response.ok) {
                          alert("Comentario actualizado con éxito");
                          commentContent.textContent = newContent;
                      } else {
                          alert("No se pudo actualizar el comentario");
                      }
                  })
                  .catch(error => {
                      console.error("Error:", error);
                  });
                    commentContent.removeChild(editForm);
                });

                cancelButton.addEventListener("click", function () {
                    commentContent.textContent = currentContent;

                    commentContent.removeChild(editForm);
                });

                editForm.appendChild(textarea);
                editForm.appendChild(saveButton);
                editForm.appendChild(cancelButton);

                commentContent.innerHTML = "";
                commentContent.appendChild(editForm);
            });
        });
    });

    document.addEventListener("DOMContentLoaded", function () {
        const deleteButtons = document.querySelectorAll(".delete-button");

        deleteButtons.forEach(function (button) {
            button.addEventListener("click", function () {
                const commentId = button.getAttribute("data-comment-id");
                const taskId = button.getAttribute("data-task-id");
                const confirmation = confirm("¿Seguro que quieres eliminar el comentario?");

                if (confirmation) {
                    fetch(`${taskId}/comments/${commentId}`, {
                        method: "DELETE",
                        headers: {
                            "Content-Type": "application/json",
                            "X-CSRF-Token": "<%= form_authenticity_token %>"
                        }
                    })
                        .then(response => {
                            if (response.ok) {
                                alert("Comentario eliminado.");
                                window.location.reload();
                            } else {
                                alert("No se pudo eliminar el comentario.");
                            }
                        })
                        .catch(error => {
                            console.error("Error:", error);
                        });
                }
            });
        });
    });
</script>